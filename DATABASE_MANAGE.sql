--DÙNG USER SYS ?? TH?C HI?N CÁC CÔNG VI?C SAU

--Dùng user v?i vai trò là user BDA và t?o các user sau

--USER V?I VAI TRÒ QU?N LÝ T?T CÁC B?NG
CREATE USER CHIVY_ADMIN IDENTIFIED BY CHIVY_ADMIN;

--USER qu?n lý các form ??ng ký
CREATE USER PASSPORT_MANAGER IDENTIFIED BY PASSPORT_MANAGER;

--USER qu?n lý các b?ng liên quan ??n RESIDENT
CREATE USER RESIDENT_MANAGER IDENTIFIED BY RESIDENT_MANAGER;

-- C?p quy?n cho các user
GRANT CONNECT, RESOURCE TO CHIVY_ADMIN;
GRANT CONNECT, RESOURCE TO PASSPORT_MANAGER;
GRANT CONNECT, RESOURCE TO RESIDENT_MANAGER;


-- C?p quy?n s? d?ng tablespace cho user:
ALTER USER PASSPORT_MANAGER QUOTA 10M ON USERS;
ALTER USER RESIDENT_MANAGER QUOTA 10M ON USERS;
ALTER USER CHIVY_ADMIN QUOTA 10M ON USERS;


CREATE TABLE PASSPORT_MANAGER.PASSPORT_REQUEST (
    passport_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    full_name VARCHAR2(100) NOT NULL,
    address VARCHAR2(255) NOT NULL,
    gender VARCHAR2(10),
    cccd VARCHAR2(20) NOT NULL,
    phone_number VARCHAR2(15) NOT NULL,
    email VARCHAR2(100) NOT NULL,
    current_passport_number VARCHAR2(20) NOT NULL,
    verified_status NUMBER(1),
    approved_status NUMBER(1),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    detail VARCHAR2(255),
    USER_VIEWED NUMBER(1) DEFAULT 0,
    CONSTRAINT chk_verified_status CHECK (verified_status IN (0, 1) OR verified_status IS NULL),
    CONSTRAINT chk_approved_status CHECK (approved_status IN (0, 1) OR approved_status IS NULL)
);


--DELETE FROM CHIVY_ADMIN.PASSPORT_REQUEST;
--COMMIT;
--INSERT D? LI?U CHO PASSPORT_MANAGER.PASSPORT_REQUEST
--INSERT INTO PASSPORT_MANAGER.PASSPORT_REQUEST(full_name, address, gender, cccd, phone_number, email, current_passport_number, user_id)
--VALUES ('Nguyen Thi Mai', '123 ???ng ABC, Qu?n 1, TP.HCM', 'N?', '123456789', '0901234567', 'mai.nguyen@example.com', '33845567', 1);
--
--INSERT INTO PASSPORT_MANAGER.PASSPORT_REQUEST(full_name, address, gender, cccd, phone_number, email, current_passport_number, user_id)
--VALUES ('Nguyen Thi Mai', '123 ???ng ABC, Qu?n 1, TP.HCM', 'N?', '123456789', '0901234567', 'mai.nguyen@example.com', 'A1234567', 1);
--
--INSERT INTO PASSPORT_MANAGER.PASSPORT_REQUEST(full_name, address, gender, cccd, phone_number, email, current_passport_number, user_id)
--VALUES ('Nguyen Thi Mai', '123 ???ng ABC, Qu?n 1, TP.HCM', 'N?', '123456789', '0901234567', 'mai.nguyen@example.com', 'A1743497', 1);
--
--INSERT INTO PASSPORT_MANAGER.PASSPORT_REQUEST(full_name, address, gender, cccd, phone_number, email, current_passport_number, user_id)
--VALUES ('Nguyen Thi Mai', '123 ???ng ABC, Qu?n 1, TP.HCM', 'N?', '123456789', '0901234567', 'mai.nguyen@example.com', 'A174327', 1);


COMMIT;

CREATE TABLE PASSPORT_MANAGER.PASSPORT_REJECTION (
    reason_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    passport_id NUMBER,
    reason VARCHAR2(255) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_passport FOREIGN KEY (passport_id) REFERENCES PASSPORT_MANAGER.PASSPORT_REQUEST(passport_id)
);

--T?O B?NG CHO RESIDENT_MANAGER
--DROP TABLE RESIDENT_MANAGER.PASSPORT
--DROP TABLE RESIDENT_MANAGER.RESIDENT

CREATE TABLE RESIDENT_MANAGER.RESIDENT (
    resident_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    full_name VARCHAR2(100) NOT NULL,
    address VARCHAR2(255) NOT NULL,
    gender VARCHAR2(10),
    cccd VARCHAR2(20) NOT NULL,
    phone_number VARCHAR2(15) NOT NULL,
    email VARCHAR2(100) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status NUMBER(1) DEFAULT 1
);

--INSERT INTO RESIDENT_MANAGER.RESIDENT (full_name, address, gender, cccd, phone_number, email, status)
--VALUES ('Nguyen Van A', '123 ???ng ABC, TP.HCM', 'Nam', '123456789012', '0901123456', 'a.nguyen@example.com', 1);
--
--UPDATE CHIVY_ADMIN.RESIDENT set full_name = 'CHI' WHERE resident_id = 3;
--select * from CHIVY_ADMIN.RESIDENT;
--
--INSERT INTO RESIDENT_MANAGER.RESIDENT (full_name, address, gender, cccd, phone_number, email, status)
--VALUES ('PH?M QU?NH NH?', '456 ng DEF, Hà N?i', 'N?', '987654321098', '0902123456', 'b.tran@example.com', 1);
--commit;

--DROP TABLE RESIDENT_MANAGER.PASSPORT
--DROP SYNONYM CHIVY_ADMIN.PASSPORT

CREATE TABLE RESIDENT_MANAGER.PASSPORT (
    passport_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    resident_id NUMBER NOT NULL,
    passport_type VARCHAR2(50) NOT NULL,                  -- Lo?i h? chi?u (ví d?: ph? thông, ngo?i giao)
    current_passport_code VARCHAR2(20) NOT NULL UNIQUE,             -- Mã h? chi?u hi?n t?i, ??m b?o duy nh?t
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    expiry_date DATE,
    reported_date DATE,   
    status NUMBER(1) DEFAULT 1,
    status_detail VARCHAR2(255),
    CONSTRAINT fk_passport FOREIGN KEY (resident_id) REFERENCES RESIDENT_MANAGER.RESIDENT(resident_id)
);


--INSERT INTO RESIDENT_MANAGER.PASSPORT (resident_id, passport_type, current_passport_code, expiry_date, reported_date, status, status_detail)
--VALUES (3, 'H? chi?u', 'P123456789', TO_DATE('2027-12-31', 'YYYY-MM-DD'), TO_DATE('2024-01-10', 'YYYY-MM-DD'), 1, '?ang s? d?ng');
--
--INSERT INTO RESIDENT_MANAGER.PASSPORT (resident_id, passport_type, current_passport_code, expiry_date, reported_date, status, status_detail)
--VALUES (3, 'Ngo?i giao', 'G984321', TO_DATE('2025-06-15', 'YYYY-MM-DD'), TO_DATE('2023-11-20', 'YYYY-MM-DD'), 1, '?ang s? d?ng');
--
--commit;


--DELETE FROM PASSPORT_MANAGER.REQUEST_HISTORY;
CREATE TABLE PASSPORT_MANAGER.REQUEST_HISTORY (
    history_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,    -- ID c?a l?ch s? yêu c?u
    passport_id NUMBER NOT NULL,                                       -- ID c?a h? chi?u (liên k?t v?i PASSPORT_REQUEST)
    status VARCHAR2(50) NOT NULL,                                       -- Tên c?t ?ã thay ??i (verified_status ho?c approved_status)
    value VARCHAR2(50),                                                -- Giá tr? m?i c?a c?t (Giá tr? c?p nh?t)
    user_viewed NUMBER(1) DEFAULT 0,                                    -- Tr?ng thái ?ã xem (0: ch?a xem, 1: ?ã xem)
    detail VARCHAR2(255), 
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,-- Chi ti?t thêm v? yêu c?u
    CONSTRAINT fk_passport_request FOREIGN KEY (passport_id)           -- Ràng bu?c khóa ngo?i v?i b?ng PASSPORT_REQUEST
        REFERENCES PASSPORT_MANAGER.PASSPORT_REQUEST(passport_id) 
        ON DELETE CASCADE
    -- Xóa khi h? chi?u b? xóa
);

-- Tao ch? m?c cho `user_viewed`
CREATE INDEX idx_user_viewed ON PASSPORT_MANAGER.REQUEST_HISTORY(user_viewed);

-- C?p quy?n cho ng??i dùng CHIVY_ADMIN có th? truy câp vào các b?ng c?a PASSPORT_MANAGER và RESIDENT_MANAGER
GRANT SELECT, INSERT, UPDATE, DELETE ON PASSPORT_MANAGER.PASSPORT_REQUEST TO CHIVY_ADMIN;
GRANT SELECT, INSERT, UPDATE, DELETE ON RESIDENT_MANAGER.RESIDENT TO CHIVY_ADMIN;
GRANT SELECT, INSERT, UPDATE, DELETE ON PASSPORT_MANAGER.PASSPORT_REJECTION TO CHIVY_ADMIN;
GRANT SELECT, UPDATE, INSERT, DELETE ON PASSPORT_MANAGER.REQUEST_HISTORY TO CHIVY_ADMIN;
GRANT SELECT, INSERT, UPDATE, DELETE ON RESIDENT_MANAGER.PASSPORT TO CHIVY_ADMIN;
GRANT SELECT, INSERT, UPDATE, DELETE ON RESIDENT_MANAGER.PASSPORT TO CHIVY_ADMIN;
GRANT SELECT, UPDATE ON CHIVY_ADMIN.PASSPORT TO LT_USER;


-- T?o synonym trong CHIVY_ADMIN cho các b?ng c?a PASSPORT_MANAGER và RESIDENT_MANAGER

CREATE SYNONYM CHIVY_ADMIN.PASSPORT_REQUEST FOR PASSPORT_MANAGER.PASSPORT_REQUEST;
CREATE SYNONYM CHIVY_ADMIN.PASSPORT_REJECTION FOR PASSPORT_MANAGER.PASSPORT_REJECTION;
CREATE SYNONYM CHIVY_ADMIN.RESIDENT FOR RESIDENT_MANAGER.RESIDENT;
CREATE SYNONYM CHIVY_ADMIN.PASSPORT FOR RESIDENT_MANAGER.PASSPORT;
CREATE SYNONYM CHIVY_ADMIN.REQUEST_HISTORY FOR PASSPORT_MANAGER.C?p quy?n;


--C?P QUY?N CN LIÊN K?T AUTH_USER VÀ PASSPORT_REQUEST

GRANT SELECT, INSERT, UPDATE, DELETE ON CHIVY_ADMIN.AUTH_USER TO PASSPORT_MANAGER;
-- C?p quy?n ALTER trên b?ng PASSPORT_REQUEST trong schema PASSPORT_MANAGER
GRANT ALTER ON PASSPORT_MANAGER.PASSPORT_REQUEST TO CHIVY_ADMIN;
-- C?p quy?n REFERENCES ??i v?i b?ng auth_user trong schema CHIVY_ADMIN
GRANT REFERENCES ON CHIVY_ADMIN.auth_user TO PASSPORT_MANAGER;
-- C?p quy?n DELETE ??i v?i b?ng auth_user trong schema CHIVY_ADMIN (n?u c?n thi?t cho ON DELETE CASCADE)
GRANT DELETE ON CHIVY_ADMIN.auth_user TO PASSPORT_MANAGER;

--Thêm c?t user_id
ALTER TABLE PASSPORT_MANAGER.PASSPORT_REQUEST
ADD user_id NUMBER NOT NULL;

--Liên k?t 2 b?ng PASSPORT_REQUEST và AUTH
ALTER TABLE PASSPORT_MANAGER.PASSPORT_REQUEST
ADD CONSTRAINT fk_user
FOREIGN KEY (user_id) REFERENCES CHIVY_ADMIN.auth_user(id)
ON DELETE CASCADE;

-- T?O USER
CREATE USER XT_USER IDENTIFIED BY XT_USER;
CREATE USER XD_USER IDENTIFIED BY XD_USER;
CREATE USER LT_USER IDENTIFIED BY LT_USER;
CREATE USER GS_USER IDENTIFIED BY GS_USER;

-- T?O ROLE
CREATE ROLE XT;
CREATE ROLE XD;
CREATE ROLE LT;
CREATE ROLE GS;
commit;

-- C?p quy?n cho role XT
GRANT SELECT, UPDATE(verified_status) ON CHIVY_ADMIN.PASSPORT_REQUEST TO XT;
-- C?p quy?n cho role XD
GRANT SELECT,UPDATE(approved_status) ON chivy_Admin.passport_request TO XD;

-- C?p quy?n cho role LT
GRANT SELECT, UPDATE(user_viewed) ON CHIVY_ADMIN.PASSPORT_REQUEST TO LT; -- Ch?a xem thông tin ?ã duy?t
GRANT SELECT, UPDATE(expiry_date) ON CHIVY_ADMIN.PASSPORT TO LT; -- C?p nh?t th?i gian gia h?n (th?i h?n h? chi?u)
GRANT SELECt ON CHIVY_ADMIN.RESIDENT TO XT;

--C?p quy?n GIÁM SÁT CHO GS
AUDIT INSERT, UPDATE, DELETE ON CHIVY_ADMIN.PASSPORT_REQUEST BY ACCESS;

CREATE VIEW GS_PASSPORT_AUDIT AS
SELECT *
FROM DBA_AUDIT_TRAIL
WHERE OBJ_NAME = 'PASSPORT_REQUEST';


GRANT SELECT ON GS_PASSPORT_AUDIT TO GS;
GRANT SELECT ON CHIVY_ADMIN.PASSPORT_REQUEST TO GS;
GRANT GS TO GS_USER;


--GÁN QUY?N T?O SESSION CHO ROLE
GRANT CREATE SESSION TO XD,XT,LT,GS; 

--G?N ROLE CHO CÁC USER
GRANT XD TO XD_USER;
GRANT XT TO XT_USER;
GRANT LT TO LT_USER;
GRANT GS TO GS_USER;


--T?O CÁC CHÍNH SÁCH 
CREATE OR REPLACE FUNCTION MASK_POLICY_REQUEST (
    schema_name IN VARCHAR2,
    object_name IN VARCHAR2
)
RETURN VARCHAR2
AS
BEGIN
   -- Ki?m tra n?u user là LT_USER
   IF SYS_CONTEXT('USERENV', 'SESSION_USER') = 'LT_USER' THEN
      RETURN 'CCCD IS NULL'; -- Thay th? giá tr? c?a c?t CCCD b?ng "ERROR"
   ELSE
      RETURN NULL; -- Không áp d?ng chính sách v?i user khác
   END IF;
END;
/


CREATE OR REPLACE FUNCTION MASK_POLICY_PASSPORT (
    schema_name IN VARCHAR2,
    object_name IN VARCHAR2
)
RETURN VARCHAR2
AS
BEGIN
   -- Ki?m tra n?u user là LT_USER
   IF SYS_CONTEXT('USERENV', 'SESSION_USER') = 'LT_USER' THEN
      RETURN 'CURRENT_PASSPORT_CODE IS NULL'; -- Thay th? giá tr? c?a c?t CCCD b?ng "ERROR"
   ELSE
      RETURN NULL; -- Không áp d?ng chính sách v?i user khác
   END IF;
END;
/

   

--BEGIN
--    DBMS_RLS.DROP_POLICY (
--        object_schema => 'PASSPORT_MANAGER',       -- Schema ch?a b?ng
--        object_name   => 'PASSPORT_REQUEST',       -- Tên b?ng
--        policy_name   => 'MASK_POLICY_REQUEST' -- Tên policy c?n xóa
--    );
--END;
--/


BEGIN
   DBMS_RLS.ADD_POLICY(
      object_schema      => 'PASSPORT_MANAGER',         -- Schema ch?a b?ng
      object_name        => 'PASSPORT_REQUEST',         -- Tên b?ng
      policy_name        => 'MASK_POLICY_REQUEST',         -- Tên policy
      policy_function    => 'MASK_POLICY_REQUEST',         -- Hàm chính sách
      statement_types    => 'SELECT',          -- Áp d?ng cho SELECT và UPDATE
      update_check       => TRUE,
      sec_relevant_cols  => 'CCCD, EMAIL, PHONE_NUMBER, GENDER', -- Các c?t b? ?nh h??ng
      sec_relevant_cols_opt => DBMS_RLS.ALL_ROWS        -- S? d?ng ALL_ROWS ?? áp d?ng cho t?t c? các dòng
   );
END;


--BEGIN
--    DBMS_RLS.DROP_POLICY (
--        object_schema => 'RESIDENT_MANAGER',       -- Schema ch?a b?ng
--        object_name   => 'PASSPORT',       -- Tên b?ng
--        policy_name   => 'MASK_POLICY_PASSPORT' -- Tên policy c?n xóa
--    );
--END;


BEGIN
   DBMS_RLS.ADD_POLICY(
      object_schema      => 'RESIDENT_MANAGER',         -- Schema ch?a b?ng
      object_name        => 'PASSPORT',           -- Tên b?ng
      policy_name        => 'MASK_POLICY_PASSPORT',   -- Tên policy
      policy_function    => 'MASK_POLICY_PASSPORT',   -- Hàm chính sách
      statement_types    => 'SELECT',             -- Áp d?ng v?i SELECT
      update_check       => TRUE,
      sec_relevant_cols  => 'PASSPORT_TYPE, CURRENT_PASSPORT_CODE',              -- Ch? ??nh c?t b? ?nh h??ng
      sec_relevant_cols_opt => DBMS_RLS.ALL_ROWS  -- Thay ??i giá tr? thành NULL
   );
END;
/


CREATE OR REPLACE TRIGGER CHIVY_ADMIN.passport_request_before_insert
BEFORE INSERT ON CHIVY_ADMIN.passport_request
FOR EACH ROW
DECLARE
    v_exists NUMBER(1);
BEGIN
    -- Ki?m tra xem ?ã có yêu c?u gia h?n v?i mã h? chi?u và user_id ch?a ???c xác minh
    SELECT COUNT(*)
    INTO v_exists
    FROM CHIVY_ADMIN.passport_request
    WHERE current_passport_number = :NEW.current_passport_number
    AND user_id = :NEW.user_id
    AND (verified_status IS NULL OR approved_status IS NULL);

    -- N?u ?ã t?n t?i yêu c?u ch?a xác minh, thì raise l?i
    IF v_exists > 0 THEN
        RAISE_APPLICATION_ERROR(-20001, '?ã có h? s? v?i mã h? chi?u này ch?a ???c xác minh.');
    END IF;
END;
/

CREATE OR REPLACE TRIGGER CHIVY_ADMIN.passport_request_before_insert_limited
BEFORE INSERT ON CHIVY_ADMIN.passport_request
FOR EACH ROW
DECLARE
    v_exists NUMBER(1);
BEGIN
    -- Ki?m tra xem ng??i dùng ?ã có 4 yêu c?u ch?a ???c xác minh ho?c ch?a ???c phê duy?t hay không
    SELECT COUNT(*)
    INTO v_exists
    FROM CHIVY_ADMIN.passport_request
    WHERE user_id = :NEW.user_id
    AND (verified_status IS NULL OR approved_status IS NULL);

    -- N?u ng??i dùng ?ã có 4 yêu c?u ch?a ???c xác minh ho?c ch?a ???c phê duy?t, thì raise l?i
    IF v_exists >= 4 THEN
        RAISE_APPLICATION_ERROR(-20002, 'Ng??i dùng ?ã có 4 yêu c?u v?i tr?ng thái ch?a xác minh');
    END IF;
END;
/

CREATE OR REPLACE TRIGGER CHIVY_ADMIN.passport_request_before_update
BEFORE UPDATE OF approved_status ON CHIVY_ADMIN.PASSPORT_REQUEST
FOR EACH ROW
BEGIN
    -- Ki?m tra n?u verified_status là NULL ho?c khác 1
    IF :OLD.verified_status IS NULL OR :OLD.verified_status != 1 THEN
        RAISE_APPLICATION_ERROR(-20002, 'Yêu c?u ch?a ???c xác th?c');
    END IF;
END;
/

CREATE OR REPLACE TRIGGER CHIVY_ADMIN.trg_passport_request_status_update
AFTER UPDATE OF verified_status, approved_status
ON CHIVY_ADMIN.PASSPORT_REQUEST
FOR EACH ROW
DECLARE
    PRAGMA AUTONOMOUS_TRANSACTION;  -- Ch?y trigger trong giao d?ch ??c l?p
BEGIN
    -- Ki?m tra n?u tr?ng thái verified_status thay ??i
    IF :OLD.verified_status != :NEW.verified_status THEN
        -- Thêm l?ch s? thay ??i vào REQUEST_HISTORY
        INSERT INTO CHIVY_ADMIN.REQUEST_HISTORY (passport_id, status, value, created_at, updated_at)
        VALUES (
            :NEW.passport_id,                      -- ID c?a h? chi?u
            'verified_status',                     -- Tên c?t thay ??i
            TO_CHAR(:NEW.verified_status),         -- Giá tr? m?i c?a c?t verified_status
            SYSDATE,                               -- Th?i gian t?o
            SYSDATE                                -- Th?i gian c?p nh?t
        );
    END IF;
    
    -- Ki?m tra n?u tr?ng thái approved_status thay ??i
    IF :OLD.approved_status != :NEW.approved_status THEN
        -- Thêm l?ch s? thay ??i vào REQUEST_HISTORY
        INSERT INTO CHIVY_ADMIN.REQUEST_HISTORY (passport_id, status, value, created_at, updated_at)
        VALUES (
            :NEW.passport_id,                      -- ID c?a h? chi?u
            'approved_status',                     -- Tên c?t thay ??i
            TO_CHAR(:NEW.approved_status),         -- Giá tr? m?i c?a c?t approved_status
            SYSDATE,                               -- Th?i gian t?o
            SYSDATE                                -- Th?i gian c?p nh?t
        );
    END IF;
    -- Commit cho giao d?ch ??c l?p
    COMMIT;
END;
/


CREATE OR REPLACE TRIGGER CHIVY_ADMIN.trg_update_passport_status
BEFORE INSERT OR UPDATE OF expiry_date ON CHIVY_ADMIN.PASSPORT
FOR EACH ROW
BEGIN
    IF :NEW.expiry_date IS NULL OR :NEW.expiry_date < SYSDATE THEN
        :NEW.status := 0;
        :NEW.status_detail := 'H?t h?n';
    ELSE
        :NEW.status := 1;
        :NEW.status_detail := 'Còn h?n';
    END IF;
END;
/


CREATE OR REPLACE TRIGGER CHIVY_ADMIN.update_timestamp_trigger
BEFORE UPDATE ON CHIVY_ADMIN.PASSPORT
FOR EACH ROW
BEGIN
    :NEW.updated_at := CURRENT_TIMESTAMP;
END;
/



