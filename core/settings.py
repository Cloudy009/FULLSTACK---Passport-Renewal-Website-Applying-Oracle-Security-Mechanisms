"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.0.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import os
from pathlib import Path
import cx_Oracle
from dotenv import load_dotenv
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY')
DEBUG = os.environ.get('DEBUG', 'False') == 'True'

ALLOWED_HOSTS = ['localhost', '127.0.0.1', 'example.com', 'b4e5-118-69-186-7.ngrok-free.app']
CSRF_TRUSTED_ORIGINS = ['http://localhost:8000','http://127.0.0.1:8000', 'http://localhost:5085', 'http://127.0.0.1:8000', 'http://127.0.0.1:5085', 'https://b4e5-118-69-186-7.ngrok-free.app', 'https://example.com']

CORS_ALLOWED_ORIGINS = [
    'https://b4e5-118-69-186-7.ngrok-free.app',  # add your origin here
]

CSRF_TRUSTED_ORIGINS = [
    'https://b4e5-118-69-186-7.ngrok-free.app',  # add your origin here
]

RENDER_EXTERNAL_HOSTNAME = os.environ.get('RENDER_EXTERNAL_HOSTNAME')
if RENDER_EXTERNAL_HOSTNAME:    
    ALLOWED_HOSTS.append(RENDER_EXTERNAL_HOSTNAME)


SITE_ID = 2
# Application definition

INSTALLED_APPS = [
    'jet',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',  # Bắt buộc
    'social_django',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.github',
    'allauth.socialaccount.providers.facebook',
    'crispy_forms',
    'dashboard',
    'account_linking',
    'passport'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "allauth.account.middleware.AccountMiddleware",
    'social_django.middleware.SocialAuthExceptionMiddleware',


]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends',  # Add this line 

            ],
        },
    },
]

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)


WSGI_APPLICATION = 'core.wsgi.application'


AUTHENTICATION_BACKENDS = [
    'social_core.backends.google.GoogleOAuth2',  # Backend cho Google OAuth2
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

# CONNECT TO ORACLE DATABASE
# Khai báo thư mục Oracle Instant Client
oracle_client_path = os.environ.get('ORACLE_CLIENT_PATH')

# Cấu hình cx_Oracle để sử dụng thư mục Oracle Instant Client
cx_Oracle.init_oracle_client(lib_dir=oracle_client_path)

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.oracle',
        'NAME': os.environ.get('ORACLE_DB_NAME'),
        'USER': os.environ.get('ORACLE_DB_USER'),
        'PASSWORD': os.environ.get('ORACLE_DB_PASSWORD'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/


# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

ACCOUNT_LOGIN_REDIRECT_URL = 'home'
ACCOUNT_LOGOUT_REDIRECT_URL = 'account_login'
#client_id = 
#client_secret = 
LOGIN_URL = '/login'

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        },
        'OAUTH_PKCE_ENABLED': True,
    },
    "github": {
        "SCOPE": [
            "user",
            "repo",
            "read:org",
        ],
        "AUTH_PARAMS": {
            "allow_signup": "true",
        }
    }
}

SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = os.environ.get('SOCIAL_AUTH_GOOGLE_OAUTH2_KEY')
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = os.environ.get('SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET')
SOCIAL_AUTH_GOOGLE_OAUTH2_REDIRECT_URI = os.environ.get('SOCIAL_AUTH_GOOGLE_OAUTH2_REDIRECT_URI')

SOCIAL_AUTH_GITHUB_KEY = os.environ.get('SOCIAL_AUTH_GITHUB_KEY')
SOCIAL_AUTH_GITHUB_SECRET = os.environ.get('SOCIAL_AUTH_GITHUB_SECRET')
SOCIAL_AUTH_GITHUB_REDIRECT_URI = os.environ.get('SOCIAL_AUTH_GITHUB_REDIRECT_URI')
SOCIAL_AUTH_GITHUB_SCOPE = ['user:email']


# Tự động tạo người dùng nếu chưa tồn tại trong hệ thống, ĐỒNG BỘ VỚI USER_AUTHENTICATION
SOCIAL_AUTH_PIPELINE = (
    'social_core.pipeline.social_auth.social_details',    # Lấy chi tiết từ tài khoản xã hội
    'social_core.pipeline.social_auth.social_uid',        # Lấy UID của người dùng từ tài khoản xã hội
    'social_core.pipeline.social_auth.auth_allowed',      # Kiểm tra xem người dùng có được phép đăng nhập không
    'social_core.pipeline.social_auth.social_user',       # Tạo hoặc lấy người dùng từ thông tin xã hội
    'account_linking.pipeline.get_or_create_user',               # (Tùy chỉnh) Lấy hoặc tạo người dùng mới
   
    'social_core.pipeline.social_auth.associate_user',    # Liên kết tài khoản xã hội với người dùng
    'social_core.pipeline.social_auth.load_extra_data',   # Tải thêm dữ liệu từ tài khoản xã hội (nếu có)
    'social_core.pipeline.user.user_details',             # Cập nhật thông tin người dùng từ tài khoản xã hội
)

LOGIN_REDIRECT_URL = '/home'
LOGOUT_REDIRECT_URL = '/'

ACCOUNT_EMAIL_VERIFICATION = 'mandatory'
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_AUTHENTICATED_REDIRECT_URL = '/'
ACCOUNT_AUTHENTICATION_METHOD = 'email'  # Bạn có thể chọn username hoặc email


# Email configuration
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587  # Sử dụng 587 cho TLS hoặc 465 cho SSL
EMAIL_USE_TLS = True  # Sử dụng True nếu sử dụng TLS, False nếu sử dụng SSL
EMAIL_USE_SSL = False  # Sử dụng True nếu sử dụng SSL, False nếu sử dụng TLS
EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')
DEFAULT_FROM_EMAIL = os.environ.get('DEFAULT_FROM_EMAIL')
DEFAULT_TO_EMAIL = os.environ.get('DEFAULT_TO_EMAIL')
